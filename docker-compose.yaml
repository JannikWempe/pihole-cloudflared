version: "3.6"

services:
  cloudflared:
    container_name: cloudflared
    image: cloudflare/cloudflared
    # Restart on crashes and on reboots
    restart: unless-stopped
    command: proxy-dns
    environment:
      - TUNNEL_DNS_UPSTREAM=https://1.1.1.1/dns-query,https://1.0.0.1/dns-query
      # Listen on an unprivileged port
      - TUNNEL_DNS_PORT=5053
      # Listen on all interfaces
      - TUNNEL_DNS_ADDRESS=0.0.0.0
    # Attach cloudflared only to the private network
    networks:
      pihole_net:
        ipv4_address: 10.0.0.2
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    restart: unless-stopped
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
      - "443:443/tcp"
    dns:
      - 127.0.0.1
      - 1.1.1.1
      - 1.0.0.1
    environment:
      - TZ=${TZ}
      - WEBPASSWORD=${WEBPASSWORD}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - IPv6=false
      - ServerIP=10.0.0.3
      # Internal IP of the cloudflared container
      - DNS1=10.0.0.2#5053
      # Explicitly disable a second DNS server, otherwise Pi-hole uses Google
      - DNS2=no
      # Listen on all interfaces and permit all origins
      # This allows Pihole to work in this setup and when answering across VLANS,
      # but do not expose pi-hole to the internet!
      - DNSMASQ_LISTENING=all
    volumes:
      - './etc-pihole/:/etc/pihole/'
      - './etc-dnsmasq.d/:/etc/dnsmasq.d/'
    cap_add:
      - NET_ADMIN
    # 1. Join the internal network so Pi-hole can talk to cloudflared
    # 2. Join the public network so it's reachable by systems on our LAN
    networks:
      pihole_net:
        ipv4_address: 10.0.0.3
    depends_on:
      - cloudflared

networks:
  # Create the pihole_net network
  pihole_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.0.0/29
